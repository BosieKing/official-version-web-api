<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
using Microsoft.AspNetCore.Mvc;
using Model.Commons.Domain;
using Model.Commons.SharedData;
using Model.DTOs.<#= this.input.SwaggerGroupEnumName#>.<#= this.input.ClassNamePrefix#>;
using Service.<#= this.input.SwaggerGroupEnumName#>.<#= this.input.ClassNamePrefix#>;
using SharedLibrary.Consts;
using SharedLibrary.Enums;
using WebApi_Offcial.ActionFilters.<#= this.input.SwaggerGroupEnumName#>;
namespace WebApi_Offcial.Controllers.<#= this.input.SwaggerGroupEnumName#>
{
    /// <summary>
    /// <#= this.input.ChinesesName#>控制层
    /// </summary>
    [ApiController]
    [Route("<#= this.input.ClassNamePrefix#>")]
    [ServiceFilter(typeof(<#= this.input.ClassNamePrefix#>ActionFilter))]
    [ApiDescription(SwaggerGroupEnum.<#= this.input.SwaggerGroupEnumName#>)]
    public class <#= this.input.ClassNamePrefix#>Controller : <#= this.input.ControllerBaseName#>
    {
        #region 构造函数
        private readonly I<#= this.input.ClassNamePrefix#>Service _<#= this.input.ParameterName#>Service;<#= this.input.IsNeedHttpContext? "\r\n        private readonly IHttpContextAccessor _httpContextAccessor;":""#>     

        /// <summary>
        /// 构造函数
        /// </summary>
        public <#= this.input.ClassNamePrefix#>Controller(I<#= this.input.ClassNamePrefix#>Service <#= this.input.ParameterName#>Service<#= this.input.IsNeedHttpContext ? ", IHttpContextAccessor httpContextAccessor" : ""#>)
        {
            _<#= this.input.ParameterName#>Service = <#= this.input.ParameterName#>Service;<#= this.input.IsNeedHttpContext? "\r\n            _httpContextAccessor = httpContextAccessor;":""#>            
        }
        #endregion   

        #region 新增
        <# 
        foreach (var item in input.ActionDic)
            {
                if (item.ActionName.StartsWith("add"))
                {
                  this.Write(this.ToStringHelper.ToStringWithCulture("        /// <summary>\r\n        /// 分页查询\r\n        /// </summary>\r\n        /// <param name=\"input\"></param>\r\n        /// <returns></returns>"));
                 
                }
            }
        #>
        #endregion  
        
    
    
    
    }  
}